<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.feecn</groupId>
    <artifactId>marcopolo</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>marcopolo-logger</module>
        <module>marcopolo-common</module>
        <module>marcopolo-data</module>
        <module>marcopolo-web</module>
        <module>marcopolo-search</module>
        <module>marcopolo-collect</module>
    </modules>

    <properties>
        <junit.version>4.11</junit.version>
        <log4j2.version>2.11.0</log4j2.version>
        <slf4j.version>1.6.6</slf4j.version>
        <mybatis.spring.version>1.3.1</mybatis.spring.version>
        <mybatis.version>3.4.1</mybatis.version>
        <elasticsearch.version>6.2.4</elasticsearch.version>
        <fastjson.version>1.2.46</fastjson.version>
        <postgresql.version>9.4.1209</postgresql.version>
        <project.build.finalName>marcopolo</project.build.finalName>
        <project.build.directory>/target</project.build.directory>
        <!--todo-->
    </properties>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
        <!--<dependency>-->
        <!--<groupId>org.springframework.boot</groupId>-->
        <!--<artifactId>spring-boot-dependencies</artifactId>-->
        <!--<version>2.1.6.RELEASE</version>-->
        <!--<type>pom</type>-->
        <!--<scope>provided</scope>-->
        <!--</dependency>-->
    </dependencies>



    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>

                <!--将插件绑定在某个phase执行-->
                <executions>
                    <execution>
                        <id>build-image</id>
                        <!--将插件绑定在package这个phase上。也就是说，用户只需执行mvn package ，就会自动执行mvn docker:build-->
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!--指定生成的镜像名-->
                    <imageName>/${project.artifactId}</imageName>
                    <!--指定标签-->
                    <imageTags>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <!-- 指定 Dockerfile 路径-->
                    <dockerDirectory>${project.basedir}/docker</dockerDirectory>

                    <!--指定远程 docker api地址-->
                    <dockerHost>http://192.168.128.147:2375</dockerHost>

                    <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <!--jar 包所在的路径  此处配置的 即对应 target 目录-->
                            <directory>${project.build.directory}</directory>
                            <!-- 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名　-->
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>



</project>